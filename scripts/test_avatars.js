// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –∞–≤–∞—Ç–∞—Ä–æ–≤
// –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node scripts/test_avatars.js

import { createClient } from '@supabase/supabase-js'
import dotenv from 'dotenv'

dotenv.config()

const supabaseUrl = process.env.VITE_SUPABASE_URL
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå –û—à–∏–±–∫–∞: VITE_SUPABASE_URL –∏ VITE_SUPABASE_ANON_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function testUserProfiles() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n')
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const { data: users, error } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at')
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error.message)
      return
    }
    
    if (!users || users.length === 0) {
      console.log('‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.')
      return
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`)
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for (const user of users) {
      console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.full_name}`)
      console.log(`   ID: ${user.id}`)
      console.log(`   Email: ${user.email}`)
      console.log(`   Username: ${user.username}`)
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª—ã
      const initials = user.full_name 
        ? user.full_name.split(/\s+/).slice(0, 2).map(word => word.charAt(0).toUpperCase()).join('')
        : 'U'
      
      console.log(`   –ò–Ω–∏—Ü–∏–∞–ª—ã: ${initials}`)
      console.log(`   –ê–≤–∞—Ç–∞—Ä –±—É–¥–µ—Ç: üîµ ${initials} (—Å–∏–Ω–∏–π –∫—Ä—É–≥)`)
      console.log('')
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º fallback
    console.log('‚ùì Fallback –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
    console.log('   ID: 00000000-0000-0000-0000-000000000000')
    console.log('   –ê–≤–∞—Ç–∞—Ä –±—É–¥–µ—Ç: ‚ö´ ? (—Å–µ—Ä—ã–π –∫—Ä—É–≥)')
    
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', err.message)
  }
}

async function testUserService() {
  console.log('\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º UserService...\n')
  
  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º UserService
    const { userService } = await import('../src/lib/userService.js')
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: users } = await supabase
      .from('profiles')
      .select('*')
      .limit(1)
    
    if (users && users.length > 0) {
      const testUser = users[0]
      console.log(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º UserService –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${testUser.full_name}`)
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º getUserProfile
      const profile = await userService.getUserProfile(testUser.id)
      if (profile) {
        console.log(`‚úÖ getUserProfile: ${profile.full_name}`)
        console.log(`   –ò–Ω–∏—Ü–∏–∞–ª—ã: ${userService.getInitials(profile)}`)
        console.log(`   –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è: ${userService.getDisplayName(profile)}`)
      } else {
        console.log('‚ùå getUserProfile: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω')
      }
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º getDisplayName –∏ getInitials
      console.log(`‚úÖ getDisplayName: ${userService.getDisplayName(profile)}`)
      console.log(`‚úÖ getInitials: ${userService.getInitials(profile)}`)
    }
    
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ UserService:', err.message)
  }
}

async function main() {
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞–≤–∞—Ç–∞—Ä–æ–≤\n')
  
  try {
    await testUserProfiles()
    await testUserService()
    
    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    console.log('–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–≤–∞—Ç–∞—Ä—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.')
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message)
    process.exit(1)
  }
}

main()
