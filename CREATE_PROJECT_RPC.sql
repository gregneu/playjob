-- –°–æ–∑–¥–∞–Ω–∏–µ RPC —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å –æ–±—Ö–æ–¥–æ–º RLS
-- –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤ Supabase SQL Editor

-- 1. –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
DROP FUNCTION IF EXISTS create_project_and_members(text,text,text,text);
DROP FUNCTION IF EXISTS create_project_and_members(text,text,text,text,text);
DROP FUNCTION IF EXISTS create_project_and_members(text);

-- 2. –°–æ–∑–¥–∞–µ–º RPC —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
CREATE OR REPLACE FUNCTION create_project_and_members(
  p_name TEXT,
  p_description TEXT DEFAULT NULL,
  p_color TEXT DEFAULT '#3B82F6',
  p_icon TEXT DEFAULT 'üéØ'
)
RETURNS TABLE (
  id UUID,
  name TEXT,
  description TEXT,
  color TEXT,
  icon TEXT,
  user_id UUID,
  status TEXT,
  created_at TIMESTAMP WITH TIME ZONE,
  updated_at TIMESTAMP WITH TIME ZONE
)
LANGUAGE plpgsql
SECURITY DEFINER
AS $$
DECLARE
  new_project_id UUID;
  current_user_id UUID;
BEGIN
  -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  current_user_id := auth.uid();
  
  IF current_user_id IS NULL THEN
    RAISE EXCEPTION 'User must be authenticated';
  END IF;

  -- –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç
  INSERT INTO projects (
    name,
    description,
    color,
    icon,
    user_id,
    status,
    created_at,
    updated_at
  ) VALUES (
    p_name,
    p_description,
    p_color,
    p_icon,
    current_user_id,
    'active',
    NOW(),
    NOW()
  ) RETURNING projects.id INTO new_project_id;

  -- –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞—Ç–µ–ª—è –∫–∞–∫ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ project_members
  INSERT INTO project_members (
    project_id,
    user_id,
    role,
    status,
    joined_at
  ) VALUES (
    new_project_id,
    current_user_id,
    'owner',
    'accepted',
    NOW()
  );

  -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
  RETURN QUERY
  SELECT 
    p.id,
    p.name,
    p.description,
    p.color,
    p.icon,
    p.user_id,
    p.status,
    p.created_at,
    p.updated_at
  FROM projects p
  WHERE p.id = new_project_id;
END;
$$;

-- 3. –î–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Å–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
GRANT EXECUTE ON FUNCTION create_project_and_members TO authenticated;

-- 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ RLS –≤–∫–ª—é—á–µ–Ω –¥–ª—è —Ç–∞–±–ª–∏—Ü
ALTER TABLE projects ENABLE ROW LEVEL SECURITY;
ALTER TABLE project_members ENABLE ROW LEVEL SECURITY;

-- 5. –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è projects (–µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç)
DO $$
BEGIN
  -- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'projects' AND policyname = 'Users can view their own projects'
  ) THEN
    CREATE POLICY "Users can view their own projects" ON projects
      FOR SELECT USING (auth.uid() = user_id);
  END IF;

  -- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'projects' AND policyname = 'Users can create their own projects'
  ) THEN
    CREATE POLICY "Users can create their own projects" ON projects
      FOR INSERT WITH CHECK (auth.uid() = user_id);
  END IF;

  -- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'projects' AND policyname = 'Users can update their own projects'
  ) THEN
    CREATE POLICY "Users can update their own projects" ON projects
      FOR UPDATE USING (auth.uid() = user_id);
  END IF;

  -- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'projects' AND policyname = 'Users can delete their own projects'
  ) THEN
    CREATE POLICY "Users can delete their own projects" ON projects
      FOR DELETE USING (auth.uid() = user_id);
  END IF;
END $$;

-- 6. –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è project_members (–µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç)
DO $$
BEGIN
  -- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'project_members' AND policyname = 'Users can view project members'
  ) THEN
    CREATE POLICY "Users can view project members" ON project_members
      FOR SELECT USING (
        auth.uid() IN (
          SELECT user_id FROM project_members 
          WHERE project_id = project_members.project_id
        )
      );
  END IF;

  -- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—ã –∏ –∞–¥–º–∏–Ω—ã)
  IF NOT EXISTS (
    SELECT 1 FROM pg_policies 
    WHERE tablename = 'project_members' AND policyname = 'Project owners can add members'
  ) THEN
    CREATE POLICY "Project owners can add members" ON project_members
      FOR INSERT WITH CHECK (
        auth.uid() IN (
          SELECT user_id FROM project_members 
          WHERE project_id = project_members.project_id AND role IN ('owner', 'admin')
        )
      );
  END IF;
END $$;
